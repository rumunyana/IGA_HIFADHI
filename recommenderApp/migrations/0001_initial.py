# Generated by Django 5.1.4 on 2025-03-18 15:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactMessageLanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='IQQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('question_type', models.CharField(choices=[('logical', 'Logical Reasoning'), ('verbal', 'Verbal Reasoning'), ('numerical', 'Numerical Reasoning'), ('spatial', 'Spatial Reasoning')], max_length=50)),
                ('difficulty', models.IntegerField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard')])),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('math_score', models.FloatField(blank=True, null=True)),
                ('english_score', models.FloatField(blank=True, null=True)),
                ('science_score', models.FloatField(blank=True, null=True)),
                ('history_score', models.FloatField(blank=True, null=True)),
                ('attendance_rate', models.FloatField(blank=True, null=True)),
                ('study_hours_per_week', models.FloatField(blank=True, null=True)),
                ('household_income', models.FloatField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Female'), (1, 'Male')], null=True)),
                ('school_type', models.IntegerField(blank=True, choices=[(0, 'Private'), (1, 'Public')], null=True)),
                ('location', models.IntegerField(blank=True, choices=[(0, 'Rural'), (1, 'Urban')], null=True)),
                ('parental_education_level', models.IntegerField(blank=True, choices=[(0, 'Primary'), (1, 'Secondary'), (2, 'Tertiary')], null=True)),
                ('internet_access', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True)),
                ('parental_career', models.IntegerField(blank=True, choices=[(0, 'Arts'), (1, 'Business'), (2, 'Education'), (3, 'Healthcare'), (4, 'Technology')], null=True)),
                ('extracurricular_activity', models.IntegerField(blank=True, choices=[(0, 'Entrepreneurship Club'), (1, 'Music'), (2, 'None'), (3, 'Science Club'), (4, 'Sports')], null=True)),
                ('interest', models.IntegerField(blank=True, choices=[(0, 'Arts'), (1, 'Business'), (2, 'Healthcare'), (3, 'Humanities'), (4, 'STEM')], null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='recommenderApp.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('predicted_subject', models.IntegerField(choices=[(0, 'Arts'), (1, 'Business'), (2, 'Healthcare'), (3, 'Humanities'), (4, 'STEM')])),
                ('recommended_subjects', models.CharField(help_text='Comma-separated recommended subjects', max_length=255)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='recommenderApp.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='IQTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logical_score', models.IntegerField(default=0)),
                ('verbal_score', models.IntegerField(default=0)),
                ('numerical_score', models.IntegerField(default=0)),
                ('spatial_score', models.IntegerField(default=0)),
                ('total_score', models.IntegerField(default=0)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='iq_results', to='recommenderApp.prediction')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iq_results', to='recommenderApp.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subject_specialization', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='recommenderApp.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_recommendation', models.IntegerField(choices=[(0, 'Arts'), (1, 'Business'), (2, 'Healthcare'), (3, 'Humanities'), (4, 'STEM')])),
                ('new_recommendation', models.IntegerField(choices=[(0, 'Arts'), (1, 'Business'), (2, 'Healthcare'), (3, 'Humanities'), (4, 'STEM')])),
                ('reason', models.TextField(blank=True, help_text='Reason for override', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommenderApp.studentprofile')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommenderApp.teacherprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommenderApp.studentprofile')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommenderApp.teacherprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('rating', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommenderApp.prediction')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommenderApp.studentprofile')),
            ],
        ),
    ]
